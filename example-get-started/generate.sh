#!/bin/sh

# Setup script env

# e Exit immediately if a command exits with a non-zero exit status.
# u Treat unset variables as an error when substituting.
# x Print commands and their arguments as they are executed.
set -eux

HERE="$( cd "$(dirname "$0")" ; pwd -P )"
REPO_NAME="example-get-started"
REPO_PATH="$HERE/build/$REPO_NAME"

if [ -d "$REPO_PATH" ]; then
    echo "Repo $REPO_PATH already exists, remove it first."
    exit 1
fi

mkdir -p $REPO_PATH
pushd $REPO_PATH

# Initialize Git repo

virtualenv -p python3 .env
export VIRTUAL_ENV_DISABLE_PROMPT=true
source .env/bin/activate
echo '.env/' >> .gitignore

git init
git add .
git commit -m  "Initialize Git repository"
git tag -a "0-empty" -m "Git initialized"

# https://dvc.org/doc/get-started/install

pip install dvc[s3]

# https://dvc.org/doc/get-started/initialize

dvc init
git commit -m "Initialize DVC project"
git tag -a "1-initialize" -m "DVC initialized."

# https://dvc.org/doc/get-started/configure

# Remote active on this environment only for writing to HTTP redirect above.
dvc remote add -d --local storage s3://dvc-public/remote/get-started

# Actual remote for generated project (read-only). Redirect of S3 bucket below.
dvc remote add -d storage https://remote.dvc.org/get-started

cp $HERE/code/README.md $REPO_PATH

git add .
git commit -m "Configure default HTTP remote (read-only), add README"
git tag -a "2-remote" -m "Read-only remote storage configured."

# https://dvc.org/doc/get-started/add-files

mkdir data && cd data
dvc get https://github.com/iterative/dataset-registry \
        get-started/data.xml
cd ..
dvc add data/data.xml
git add data/.gitignore data/data.xml.dvc
git commit -m "Add raw data to project"
git tag -a "3-add-file" -m "Data file added."
dvc push  # https://dvc.org/doc/get-started/share-data

# https://dvc.org/doc/get-started/connect-code-and-data

wget https://code.dvc.org/get-started/code.zip
unzip code.zip
rm -f code.zip
git add .
git commit -m "Add source code files to repo"
git tag -a "4-sources" -m "Source code added."

pip install -r src/requirements.txt

# https://dvc.org/doc/get-started/connect-code-and-data#create-a-first-data-transformation-stage

dvc run -f prepare.dvc \
        -d src/prepare.py -d data/data.xml \
        -o data/prepared \
        python src/prepare.py data/data.xml
git add data/.gitignore prepare.dvc
git commit -m "Create data preparation stage"
git tag -a "5-preparation" -m "First pipeline stage (data preparation) created."
dvc push

# https://dvc.org/doc/get-started/pipeline

dvc run -f featurize.dvc \
        -d src/featurization.py -d data/prepared \
        -o data/features \
        python src/featurization.py \
               data/prepared data/features
git add data/.gitignore featurize.dvc
git commit -m "Create featurization stage"
git tag -a "6-featurization" -m "Featurization stage created."
dvc push

dvc run -f train.dvc \
        -d src/train.py -d data/features \
        -o model.pkl \
        python src/train.py data/features model.pkl
git add .gitignore train.dvc
git commit -m "Create training stage"
git tag -a "7-train" -m "Training stage created."
dvc push

# https://dvc.org/doc/get-started/metrics

dvc run -f evaluate.dvc \
        -d src/evaluate.py -d model.pkl -d data/features \
        -M auc.metric \
        python src/evaluate.py model.pkl data/features auc.metric
git add .gitignore evaluate.dvc auc.metric
git commit -m "Create evaluation stage"
git tag -a "baseline-experiment" -m "Baseline experiment evaluation"
git tag -a "8-evaluation" -m "Baseline evaluation stage created."
dvc push

# https://dvc.org/doc/get-started/experiments

sed -e s/max_features=5000\)/max_features=6000\,\ ngram_range=\(1\,\ 2\)\)/ -i "" \
    src/featurization.py

dvc repro train.dvc
git commit -am "Reproduce model using bigrams"
git tag -a "9-bigrams-model" -m "Model retrained using bigrams."

# https://dvc.org/doc/get-started/compare-experiments

dvc repro evaluate.dvc
git commit -am "Evaluate bigrams model"
git tag -a "bigrams-experiment" -m "Bigrams experiment evaluation"
git tag -a "10-bigrams-experiment" -m "Evaluated bigrams model."
dvc push

popd

echo "`cat <<EOF-

The Git repo generated by this script is intended to be published on
https://github.com/iterative/example-get-started. Make sure the Github repo
exists first and that you have appropriate write permissions.

To create it with https://hub.github.com/ for example, run:

hub create iterative/example-get-started -d "Get Started DVC project" \
-h "https://dvc.org/doc/get-started"

If the Github repo already exists, run these commands to rewrite it:

cd build/example-get-started
git remote add origin git@github.com:iterative/example-get-started.git
git push --force origin master
git push --force origin --tags
cd ../..

You may remove the generated repo with:

rm -fR build

`"

#!/bin/sh

# Setup script env

# e Exit immediately if a command exits with a non-zero exit status.
# u Treat unset variables as an error when substituting.
# x Print commands and their arguments as they are executed.
set -eux

HERE="$( cd "$(dirname "$0")" ; pwd -P )"
REPO_NAME="dataset-registry"
REPO_PATH="$HERE/build/$REPO_NAME"

if [ -d "$REPO_PATH" ]; then
    echo "Repo $REPO_PATH already exists, remove it first."
    exit 1
fi

mkdir -p $REPO_PATH
pushd $REPO_PATH

# Create virtualenv, install `dvc`, initialize/config DVC project

virtualenv -p python3 .env
export VIRTUAL_ENV_DISABLE_PROMPT=true
source .env/bin/activate
echo '.env/' >> .gitignore

pip install dvc[s3]

git init
dvc init

# Remote active on this environment only for writing to HTTP redirect below.
dvc remote add -d --local storage s3://dvc-public/remote/dataset-registry

# Actual remote for generated project (read-only). Redirect of S3 bucket below.
dvc remote add -d storage https://remote.dvc.org/dataset-registry

cp $HERE/code/README.md $REPO_PATH

git add .
git commit -m "Init & config DVC project, add README"

# Get Started

mkdir get-started
wget https://data.dvc.org/get-started/data.xml -O get-started/data.xml
dvc add get-started/data.xml
git add get-started/.gitignore get-started/data.xml.dvc
git commit -m "Add Get Started dataset"
dvc push

# TODO: Gather more datasets!

popd

echo "`cat <<EOF-

The Git repo generated by this script is intended to be published on
https://github.com/iterative/dataset-registry. Make sure the Github repo
exists firt.

To create it with https://hub.github.com/ for example, run:

hub create iterative/dataset-registry -d "Get Started DVC project" \
-h "https://dvc.org/doc/get-started"

If the Github repo already exists, run these commands to rewrite it:

cd build/dataset-registry
git remote add origin git@github.com:iterative/dataset-registry.git
git push --force origin master
cd ../..

You may remove the generated repo with:

rm -fR build

`"
